# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build & Deploy to Azure Spring Apps with Key Vault

###################################################################################################################
#
# https://learn.microsoft.com/en-us/azure/spring-apps/how-to-github-actions?pivots=programming-language-java
# https://github.com/marketplace/actions/azure-spring-apps
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-azure
#
###################################################################################################################

env:
  AZ_CLI_VERSION: 2.40.0
  AZURE_SPRING_APPS_SERVICE: asa-petcliasa # customize this
  KEYVAULT: kv-petcliasa21 # customize this
  
  # ==== APPS ====:
  API_GATEWAY: api-gateway
  ADMIN_SERVER: admin-server
  CONFIG_SERVER: config-server
  CUSTOMERS_SERVICE: customers-service
  DISCOVERY_SERVER: discovery-server
  VETS_SERVICE: vets-service
  VISITS_SERVICE: visits-service

  PRJ_PREFIX: asa-spring-petclinic

  # ==== Azure Spring Apps / Apps Deployment params ====:

  # customize this
  # DEPLOYMENT_RG: rg-iac-asa-petclinic-mic-srv
  DEPLOYMENT_JVM_OPTIONS: -Dazure.keyvault.uri=https://kv-petcliasa21.vault.azure.net -Xms512m -Xmx1024m -Dspring.profiles.active=mysql,key-vault,cloud
  
  DEPLOYMENT_VERSION: 2.6.6
  DEPLOYMENT_RUNTIME_VERSION: Java_11
  DEPLOYMENT_CPU: 500m
  DEPLOYMENT_MEMORY: 512Mi
  DEPLOYMENT_INSTANCE_COUNT: 3
  DEPLOYMENT_DISABLE_PROBE: false

  # If set to true and the deployment specified by deployment-name does not exist at execution time, it will be created.
  DEPLOYMENT_CREATE_NEW: true

  # https://github.com/marketplace/actions/azure-spring-cloud#arguments
  # Choose either the Blue or Green settings below
  DEPLOYMENT_NAME: Blue
  DEPLOYMENT_STAGING: true
  DEPLOYMENT_ACTION: deploy

  # Choose either Blue or Green
  # DEPLOYMENT_NAME: Green
  # DEPLOYMENT_STAGING: false
  # DEPLOYMENT_ACTION: set-production


  # ==== Secrets ====
  credentials: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT: ${{ secrets.SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT }}
  SPRING_CLOUD_AZURE_TENANT_ID: ${{ secrets.SPRING_CLOUD_AZURE_TENANT_ID }}


on: # [push]
  workflow_dispatch:

jobs:
  set-var:
    runs-on: ubuntu-latest
    # environment: production // https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    # https://github.com/marketplace/actions/azure-login
    steps:

    # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
    # /!\ IMPORTANT:  The step that creates or updates the environment variable does not have access to the new value, but all subsequent steps in a job will have access.
    - name: Set Base environment variables
      run: |
        echo "LOCAL_IP=$(curl whatismyip.akamai.com)" >> $GITHUB_ENV
        
        echo "API_GATEWAY_JAR_ARTIFACT=${{ env.PRJ_PREFIX }}-${{ env.API_GATEWAY }}-${{ env.DEPLOYMENT_VERSION }}.jar" >> $GITHUB_ENV
        echo "ADMIN_SERVER_JAR_ARTIFACT=${{ env.PRJ_PREFIX }}-${{ env.ADMIN_SERVER }}-${{ env.DEPLOYMENT_VERSION }}.jar" >> $GITHUB_ENV
        echo "CONFIG_SERVER_JAR_ARTIFACT=${{ env.PRJ_PREFIX }}-${{ env.CONFIG_SERVER }}-${{ env.DEPLOYMENT_VERSION }}.jar" >> $GITHUB_ENV
        echo "DISCOVERY_SERVER_JAR_ARTIFACT=${{ env.PRJ_PREFIX }}-${{ env.DISCOVERY_SERVER }}-${{ env.DEPLOYMENT_VERSION }}.jar" >> $GITHUB_ENV
        echo "CUSTOMERS_SERVICE_JAR_ARTIFACT=${{ env.PRJ_PREFIX }}-${{ env.CUSTOMERS_SERVICE }}-${{ env.DEPLOYMENT_VERSION }}.jar" >> $GITHUB_ENV
        echo "VETS_SERVICE_JAR_ARTIFACT=${{ env.PRJ_PREFIX }}-${{ env.VETS_SERVICE }}-${{ env.DEPLOYMENT_VERSION }}.jar" >> $GITHUB_ENV
        echo "VISITS_SERVICE_JAR_ARTIFACT=${{ env.PRJ_PREFIX }}-${{ env.VISITS_SERVICE }}-${{ env.DEPLOYMENT_VERSION }}.jar" >> $GITHUB_ENV

        echo "API_GATEWAY_DEPLOYMENT=${{ env.DEPLOYMENT_NAME }}-${{ env.API_GATEWAY }}" >> $GITHUB_ENV
        echo "ADMIN_SERVER_DEPLOYMENT=${{ env.DEPLOYMENT_NAME }}-${{ env.ADMIN_SERVER }}" >> $GITHUB_ENV
        echo "CONFIG_SERVER_DEPLOYMENT=${{ env.DEPLOYMENT_NAME }}-${{ env.CONFIG_SERVER }}" >> $GITHUB_ENV
        echo "CUSTOMERS_SERVICE_DEPLOYMENT=${{ env.DEPLOYMENT_NAME }}-${{ env.CUSTOMERS_SERVICE }}" >> $GITHUB_ENV
        echo "DISCOVERY_SERVER_DEPLOYMENT=${{ env.DEPLOYMENT_NAME }}-${{ env.DISCOVERY_SERVER }}" >> $GITHUB_ENV
        echo "VETS_SERVICE_DEPLOYMENT=${{ env.DEPLOYMENT_NAME }}-${{ env.VETS_SERVICE }}" >> $GITHUB_ENV
        echo "VISITS_SERVICE_DEPLOYMENT=${{ env.DEPLOYMENT_NAME }}-${{ env.VISITS_SERVICE }}" >> $GITHUB_ENV

      shell: bash

    # Variables in the env map cannot be defined in terms of other variables in the map
    - name: Set dependent environment variables
      run: |

        # ==== JARS ====: PWD already in /home/runner/work/azure-spring-cloud-petclinic-mic-srv >> $GITHUB_ENV
        echo "API_GATEWAY_JAR=${{ env.PRJ_PREFIX }}-${{ env.API_GATEWAY }}/target/$API_GATEWAY_JAR_ARTIFACT" >> $GITHUB_ENV
        echo "ADMIN_SERVER_JAR=${{ env.PRJ_PREFIX }}-${{ env.ADMIN_SERVER }}/target/$ADMIN_SERVER_JAR_ARTIFACT" >> $GITHUB_ENV
        echo "CONFIG_SERVER_JAR=${{ env.PRJ_PREFIX }}-${{ env.CONFIG_SERVER }}/target/$CONFIG_SERVER_JAR_ARTIFACT" >> $GITHUB_ENV
        echo "CUSTOMERS_SERVICE_JAR=${{ env.PRJ_PREFIX }}-${{ env.CUSTOMERS_SERVICE }}/target/$CUSTOMERS_SERVICE_JAR_ARTIFACT" >> $GITHUB_ENV
        echo "DISCOVERY_SERVER_JAR=${{ env.PRJ_PREFIX }}-${{ env.DISCOVERY_SERVER }}/target/$DISCOVERY_SERVER_JAR_ARTIFACT" >> $GITHUB_ENV
        echo "VETS_SERVICE_JAR=${{ env.PRJ_PREFIX }}-${{ env.VETS_SERVICE }}/target/$VETS_SERVICE_JAR_ARTIFACT" >> $GITHUB_ENV
        echo "VISITS_SERVICE_JAR=${{ env.PRJ_PREFIX }}-${{ env.VISITS_SERVICE }}/target/$VISITS_SERVICE_JAR_ARTIFACT" >> $GITHUB_ENV

        GH_WORKSPACE="/github/workspace"
        echo "API_GATEWAY_PACKAGE_PATH=$GH_WORKSPACE/${{ env.API_GATEWAY }}/${{ env.API_GATEWAY_JAR_ARTIFACT }}" >> $GITHUB_ENV
        echo "ADMIN_SERVER_PACKAGE_PATH=$GH_WORKSPACE/${{ env.ADMIN_SERVER }}/${{ env.ADMIN_SERVER_JAR_ARTIFACT }}" >> $GITHUB_ENV
        echo "CONFIG_SERVER_PACKAGE_PATH=$GH_WORKSPACE/${{ env.CONFIG_SERVER }}/${{ env.CONFIG_SERVER_JAR_ARTIFACT }}" >> $GITHUB_ENV
        echo "CUSTOMERS_SERVICE_PACKAGE_PATH=$GH_WORKSPACE/${{ env.CUSTOMERS_SERVICE }}/${{ env.CUSTOMERS_SERVICE_JAR_ARTIFACT }}" >> $GITHUB_ENV
        echo "DISCOVERY_SERVER_PACKAGE_PATH=$GH_WORKSPACE/${{ env.DISCOVERY_SERVER }}/${{ env.DISCOVERY_SERVER_JAR_ARTIFACT }}" >> $GITHUB_ENV
        echo "VETS_SERVICE_PACKAGE_PATH=$GH_WORKSPACE/${{ env.VETS_SERVICE }}/${{ env.VETS_SERVICE_JAR_ARTIFACT }}" >> $GITHUB_ENV
        echo "VISITS_SERVICE_PACKAGE_PATH=$GH_WORKSPACE/${{ env.VISITS_SERVICE }}/${{ env.VISITS_SERVICE_JAR_ARTIFACT }}" >> $GITHUB_ENV

      shell: bash

    - name: Display environment variables
      run: |
        echo "Checking GITHUB_ENV"

        echo "LOCAL_IP=$LOCAL_IP"

        echo "API_GATEWAY_JAR_ARTIFACT=$API_GATEWAY_JAR_ARTIFACT"
        echo "ADMIN_SERVER_JAR_ARTIFACT=$ADMIN_SERVER_JAR_ARTIFACT"
        echo "CONFIG_SERVER_JAR_ARTIFACT=$CONFIG_SERVER_JAR_ARTIFACT"
        echo "DISCOVERY_SERVER_JAR_ARTIFACT=$DISCOVERY_SERVER_JAR_ARTIFACT"
        echo "CUSTOMERS_SERVICE_JAR_ARTIFACT=$CUSTOMERS_SERVICE_JAR_ARTIFACT"
        echo "VETS_SERVICE_JAR_ARTIFACT=$VETS_SERVICE_JAR_ARTIFACT"
        echo "VISITS_SERVICE_JAR_ARTIFACT=$VISITS_SERVICE_JAR_ARTIFACT"

        echo "API_GATEWAY_JAR=$API_GATEWAY_JAR"
        echo "ADMIN_SERVER_JAR=$ADMIN_SERVER_JAR"
        echo "CONFIG_SERVER_JAR=$CONFIG_SERVER_JAR"
        echo "CUSTOMERS_SERVICE_JAR=$CUSTOMERS_SERVICE_JAR"
        echo "DISCOVERY_SERVER_JAR=$DISCOVERY_SERVER_JAR"
        echo "VETS_SERVICE_JAR=$VETS_SERVICE_JAR"
        echo "VISITS_SERVICE_JAR=$VISITS_SERVICE_JAR"

        echo "API_GATEWAY_PACKAGE_PATH=$API_GATEWAY_PACKAGE_PATH"
        echo "ADMIN_SERVER_PACKAGE_PATH=$ADMIN_SERVER_PACKAGE_PATH"
        echo "CONFIG_SERVER_PACKAGE_PATH=$CONFIG_SERVER_PACKAGE_PATH"
        echo "CUSTOMERS_SERVICE_PACKAGE_PATH=$CUSTOMERS_SERVICE_PACKAGE_PATH"
        echo "DISCOVERY_SERVER_PACKAGE_PATH=$DISCOVERY_SERVER_PACKAGE_PATH"
        echo "VETS_SERVICE_PACKAGE_PATH=$VETS_SERVICE_PACKAGE_PATH"
        echo "VISITS_SERVICE_PACKAGE_PATH=$VISITS_SERVICE_PACKAGE_PATH"

        echo "API_GATEWAY_DEPLOYMENT=$API_GATEWAY_DEPLOYMENT"
        echo "ADMIN_SERVER_DEPLOYMENT=$ADMIN_SERVER_DEPLOYMENT"
        echo "CONFIG_SERVER_DEPLOYMENT=$CONFIG_SERVER_DEPLOYMENT"
        echo "CUSTOMERS_SERVICE_DEPLOYMENT=$CUSTOMERS_SERVICE_DEPLOYMENT"
        echo "DISCOVERY_SERVER_DEPLOYMENT=$DISCOVERY_SERVER_DEPLOYMENT"
        echo "VETS_SERVICE_DEPLOYMENT=$VETS_SERVICE_DEPLOYMENT"
        echo "VISITS_SERVICE_DEPLOYMENT=$VISITS_SERVICE_DEPLOYMENT"
      shell: bash

    # Something to note, actions/checkout@v2 no longer sets the github workspace to the path input, which means you may need to manually set the working directory for your runs step
    # https://github.com/actions/checkout/blob/main/adrs/0153-checkout-v2.md#path
        
    - name: Checkout your repo
      uses: actions/checkout@v2
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'microsoft'
        cache: maven

  # https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
  # invalid value workflow reference: references to workflows must be prefixed with format 'owner/repository/' or './' for local workflows
  #call-maven-build-workflow:
  #  name: Trigger Maven
  #  needs: set-var
  #  uses: ./.github/workflows/maven-build.yml # .github/workflows/maven-build.yml@main ==> references to workflows must be prefixed with format 'owner/repository/' or './' for local workflows
  #  secrets: inherit # pass all secrets
  #    # envPAT: ${{ secrets.envPAT }} # pass just this secret
  
    - name: Build with Maven
      id: mvn_build
      run: | 
        mvn -B clean package --file pom.xml -DskipTests -Denv=cloud
        
        echo "github.workspace = ${{ github.workspace }}"
        pwd

        ls -al
        ls -al spring-petclinic-admin-server/target/*.jar
        ls -al spring-petclinic-api-gateway/target/*.jar
        ls -al spring-petclinic-config-server/target/*.jar
        ls -al spring-petclinic-customers-service/target/*.jar
        ls -al spring-petclinic-vets-service/target/*.jar
        ls -al spring-petclinic-visits-service/target/*.jar

  upload-artifacts:
    needs: call-maven-build-workflow
    runs-on: ubuntu-latest

  # https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts
    steps:
    - name: Archive ADMIN-SERVER Jar artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ADMIN_SERVER }}
        path: ${{ github.workspace }}/${{ env.ADMIN_SERVER_JAR }}
        retention-days: 5

    - name: Archive CONFIG-SERVER Jar artifacts
      uses:  actions/upload-artifact@v3
      with:
        name: ${{ env.CONFIG_SERVER }}
        path: ${{ github.workspace }}/${{ env.CONFIG_SERVER_JAR }}
        retention-days: 5

    - name: Archive DISCOVERY-SERVER Jar artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.DISCOVERY_SERVER }}
        path: ${{ github.workspace }}/${{ env.DISCOVERY_SERVER_JAR }}
        retention-days: 5

    - name: Archive API-GATEWAY Jar artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.API_GATEWAY }}
        path: ${{ github.workspace }}/${{ env.API_GATEWAY_JAR }}
        retention-days: 5

    - name: Archive CUSTOMERS-SERVICE Jar artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.CUSTOMERS_SERVICE }}
        path: ${{ github.workspace }}/${{ env.CUSTOMERS_SERVICE_JAR }}
        retention-days: 5

    - name: Archive VETS-SERVICE Jar artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.VETS_SERVICE }}
        path: ${{ github.workspace }}/${{ env.VETS_SERVICE_JAR }}
        retention-days: 5

    - name: Archive VISITS-SERVICE Jar artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.VISITS_SERVICE }}
        path: ${{ github.workspace }}/${{ env.VISITS_SERVICE_JAR }}
        retention-days: 5

  deploy-apps:
    needs: [call-maven-build-workflow, upload-artifacts]
    runs-on: ubuntu-latest # [self-hosted, linux, x64]
    steps: 

    - name: Azure Login
      uses: azure/login@v1.4.6 # https://github.com/marketplace/actions/azure-login
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # You can  download all artifacts in a workflow run by not specifying a name.
    - name: Download ALL Jar artifacts
      uses: actions/download-artifact@v3
    
    # https://github.com/marketplace/actions/azure-spring-apps
    - name: Deploy vets-service
      uses: Azure/spring-apps-deploy@v1
      with:
        azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.AZURE_SPRING_APPS_SERVICE }}
        app-name: ${{ env.VETS_SERVICE }}
        use-staging-deployment: ${{ env.DEPLOYMENT_STAGING }}
        package: $VETS_SERVICE_DEPLOYMENT
        jvm-options: ${{ env.DEPLOYMENT_JVM_OPTIONS }}
        # Environment variables to be entered using the syntax '-key value'. Values containing spaces should be enclosed in double quotes.
        environment-variables: "-SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT ${{ env.SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT }} -SPRING_CLOUD_AZURE_TENANT_ID ${{ env.SPRING_CLOUD_AZURE_TENANT_ID }}"
        deployment-name: $VETS_SERVICE_DEPLOYMENT
        create-new-deployment: ${{ env.DEPLOYMENT_CREATE_NEW }}
        version: ${{ env.DEPLOYMENT_VERSION }} 
        runtime-version: ${{ env.DEPLOYMENT_RUNTIME_VERSION }}

    - name: Deploy visits-service
      uses: Azure/spring-apps-deploy@v1
      with:
        azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.AZURE_SPRING_APPS_SERVICE }}
        app-name: ${{ env.VISITS_SERVICE }}
        use-staging-deployment: ${{ env.DEPLOYMENT_STAGING }}
        package: $VISITS_SERVICE_PACKAGE_PATH
        jvm-options: ${{ env.DEPLOYMENT_JVM_OPTIONS }}
        # Environment variables to be entered using the syntax '-key value'. Values containing spaces should be enclosed in double quotes.
        environment-variables: "-SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT ${{ env.SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT }} -SPRING_CLOUD_AZURE_TENANT_ID ${{ env.SPRING_CLOUD_AZURE_TENANT_ID }}"
        deployment-name: $VISITS_SERVICE_DEPLOYMENT
        create-new-deployment: ${{ env.DEPLOYMENT_CREATE_NEW }}
        version: ${{ env.DEPLOYMENT_VERSION }} 
        runtime-version: ${{ env.DEPLOYMENT_RUNTIME_VERSION }}

    - name: Deploy customers-service
      uses: Azure/spring-apps-deploy@v1
      with:
        azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.AZURE_SPRING_APPS_SERVICE }}
        app-name: ${{ env.CUSTOMERS_SERVICE }}
        use-staging-deployment: ${{ env.DEPLOYMENT_STAGING }}
        package: $CUSTOMERS_SERVICE_PACKAGE_PATH
        jvm-options: ${{ env.DEPLOYMENT_JVM_OPTIONS }}
        # Environment variables to be entered using the syntax '-key value'. Values containing spaces should be enclosed in double quotes.
        environment-variables: "-SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT ${{ env.SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT }} -SPRING_CLOUD_AZURE_TENANT_ID ${{ env.SPRING_CLOUD_AZURE_TENANT_ID }}"
        deployment-name: $CUSTOMERS_SERVICE_DEPLOYMENT
        create-new-deployment: ${{ env.DEPLOYMENT_CREATE_NEW }}
        version: ${{ env.DEPLOYMENT_VERSION }} 
        runtime-version: ${{ env.DEPLOYMENT_RUNTIME_VERSION }}

    - name: Deploy api-gateway
      uses: Azure/spring-apps-deploy@v1
      with:
        azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.AZURE_SPRING_APPS_SERVICE }}
        app-name: ${{ env.API_GATEWAY }}
        use-staging-deployment: ${{ env.DEPLOYMENT_STAGING }}
        package: $API_GATEWAY_PACKAGE_PATH
        jvm-options: ${{ env.DEPLOYMENT_JVM_OPTIONS }}
        deployment-name: $API_GATEWAY_DEPLOYMENT
        create-new-deployment: ${{ env.DEPLOYMENT_CREATE_NEW }}
        version: ${{ env.DEPLOYMENT_VERSION }} 
        runtime-version: ${{ env.DEPLOYMENT_RUNTIME_VERSION }} 
        
    # security hardening for self-hosted agents: https://github.com/marketplace/actions/azure-login
    # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#hardening-for-self-hosted-runners
    # if the runner is self-hosted which is not github provided it is recommended to manually logout at the end of the workflow as shown below.
    - name: Azure Logout security hardening
      run: |
          az logout
          az cache purge
          az account clear
      shell: bash
# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven for UI

env:
  PROJECT_NAME: petclinic                # set this to your project's name
  KV_NAME: kv-petcliasa21               # The name of the KV, must be UNIQUE. A vault name must be between 3-24 alphanumeric characters
  
  RG_KV: rg-iac-kv21 # RG where to deploy KV
  RG_APP: rg-iac-asa-petclinic-mic-srv # RG where to deploy the other Azure services: ASA, MySQL, etc.

  # ==== Azure storage to store Artifacts , values must be consistent with the ones in storage.bicep ====:
  AZ_STORAGE_NAME : stasapetcliasa # customize this
  AZ_BLOB_CONTAINER_NAME: petcliasa-blob # customize this
  # AZ_BLOB_SVC_NAME: default # MUST NOT BE MODIFIED
  # https://stasapetcliasa.blob.core.windows.net/petcliasa-blob/asa-spring-petclinic-admin-server-2.6.13.jar

  # https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations
  AZ_BLOB_MAX_CONNECTIONS: 5
  AZ_BLOB_MAXSIZE_CONDITION: 104857600
  AZ_BLOB_TIMEOUT: 600

  # ==== APPS ====
  PRJ_PREFIX: asa-spring-petclinic

  API_GATEWAY: api-gateway
  ADMIN_SERVER: admin-server
  CUSTOMERS_SERVICE: customers-service
  VETS_SERVICE: vets-service
  VISITS_SERVICE: visits-service

  CONFIG_SERVER: config-server
  DISCOVERY_SERVER: discovery-server

  # ==== Versions ====
  DEPLOYMENT_VERSION: 2.6.13
  AZ_CLI_VERSION: 2.44.1
  JAVA_VERSION: 11

  # https://github.com/Azure/actions-workflow-samples/blob/master/assets/create-secrets-for-GitHub-workflows.md#consume-secrets-in-your-workflow
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-secrets
  # ==== Secrets ====
  credentials: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs

on:
  workflow_call:

  push:
    branches:
      - azure
      - main
      - master
      - '2.5.1'
      - '2.6.3'
      - enterprise
      - 'releases/**'    
  pull_request:
    branches:
      - azure
      - main
      - master
      - '2.5.1'
      - '2.6.3'
      - enterprise
      - 'releases/**'

jobs:
  maven-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'microsoft' # https://github.com/actions/setup-java
        cache: maven
    - name: Build with Maven
      id: mvn_build
      run: | 
        pwd
        ls -al
        
        echo "****************************************************************************************"
        echo "*                                                                                      *"
        echo "*                                                                                      *"
        echo "* /!\ IMPORTANT WARNING: projects must be built with -Denv=cloud                       *"
        echo "* EXCEPT for api-gateway                                                               *"
        echo "*                                                                                      *"
        echo "*                                                                                      *"
        echo "****************************************************************************************"

        mvn -B clean package --file pom.xml -DskipTests --projects spring-petclinic-api-gateway -rf :asa-spring-petclinic-api-gateway
        
        echo "github.workspace = ${{ github.workspace }}"
        pwd

        ls -al
        ls -al spring-petclinic-api-gateway/target/*.jar

        echo "API_GATEWAY_JAR_ARTIFACT=${{ env.PRJ_PREFIX }}-${{ env.API_GATEWAY }}-${{ env.DEPLOYMENT_VERSION }}.jar" >> $GITHUB_ENV

    - name: Azure Login
      uses: azure/login@v1.4.6 # https://github.com/marketplace/actions/azure-login
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Authorize local IP access to the Azure BLOB Storage 
      if: ${{ always() }}
      run: |
        LOCAL_IP=$(curl whatismyip.akamai.com)
        echo "LOCAL_IP=$(curl whatismyip.akamai.com)" >> $GITHUB_ENV

        echo "About to ADD network-rule to ALLOW $LOCAL_IP to Azure BLOB Storage ${{ env.AZ_STORAGE_NAME }}"
        az storage account network-rule add --ip-address $LOCAL_IP --account-name  ${{ env.AZ_STORAGE_NAME }}  --action "Allow" -g ${{ env.RG_APP }}  --only-show-errors
        sleep 30

        echo "API_GATEWAY_JAR=spring-petclinic-${{ env.API_GATEWAY }}/target/$API_GATEWAY_JAR_ARTIFACT" >> $GITHUB_ENV  
      shell: bash

    - name: Upload Artifacts to Azure BLOB Storage
      id: blob_upload
      run: | 
        # https://learn.microsoft.com/en-us/azure/storage/blobs/blob-cli

        # Runner will be blocked by network rules of storage account. Must Allow its IP
        # TODO in Bicep : RBAC ==> GH Runner SPN must have "Storage Blob Data Contributor" Role on the storage Account

        az config set extension.use_dynamic_install=yes_without_prompt
        echo "About to upload Artifcats to Azure BLOB Storage. /!\ --overwrite' is in preview and under development"
        echo "AZ_BLOB_MAX_CONNECTIONS=${{ env.AZ_BLOB_MAX_CONNECTIONS }}"
        echo "AZ_BLOB_TIMEOUT=${{ env.AZ_BLOB_TIMEOUT }} "
        echo "AZ_BLOB_MAX_CONNECTIONS=${{ env.AZ_BLOB_MAX_CONNECTIONS }}"

        ls -al ${{ env.API_GATEWAY_JAR }}
        # https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations
        az storage blob upload --name ${{ env.API_GATEWAY }} --file ${{ github.workspace }}/${{ env.API_GATEWAY_JAR }} --container-name ${{ env.AZ_BLOB_CONTAINER_NAME }} --account-name ${{ env.AZ_STORAGE_NAME }} --auth-mode login --overwrite --max-connections ${{ env.AZ_BLOB_MAX_CONNECTIONS }} --timeout ${{ env.AZ_BLOB_TIMEOUT }}

    - name: Disable local IP access to the Azure BLOB Storage 
      if: ${{ always() }}
      run: |
        echo "About to REMOVE network-rule ALLOWING $LOCAL_IP to Azure BLOB Storage ${{ env.AZ_STORAGE_NAME }}"
        az storage account network-rule remove --ip-address $LOCAL_IP --account-name  ${{ env.AZ_STORAGE_NAME }} -g ${{ env.RG_APP }} --only-show-errors
      shell: bash

    # https://docs.github.com/en/packages/learn-github-packages/introduction-to-github-packages
    # To authenticate to a GitHub Packages registry within a GitHub Actions workflow, you can use
    # GITHUB_TOKEN to publish packages associated with the workflow repository.

    # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry
    # https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-maven#publishing-packages-to-github-packages
    # Publish the package
    # https://stackoverflow.com/questions/57711558/deploy-to-github-package-registry-from-github-action
    # https://github.com/marketplace/actions/generate-settings-xml-for-maven-builds
    # https://maven.apache.org/plugins/maven-deploy-plugin/deploy-mojo.html#altDeploymentRepository
    - name:  Publish the package
      run: |
        mkdir -p ~/.m2
        echo "<settings><servers><server><id>github-asc</id><username>$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $1}')</username><password>\${env.GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
        REPO="github-asa::default::https://maven.pkg.github.com/${GITHUB_REPOSITORY}"

        # mvn deploy -DaltReleaseDeploymentRepository="${REPO}" -DaltSnapshotDeploymentRepository="${REPO}" --batch-mode -DskipTests -Dmaven.install.skip=true
      env:
        GITHUB_TOKEN: ${{ secrets.PKG_PAT }}

    # security hardening for self-hosted agents: https://github.com/marketplace/actions/azure-login
    # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#hardening-for-self-hosted-runners
    # if the runner is self-hosted which is not github provided it is recommended to manually logout at the end of the workflow as shown below.
    - name: Azure Logout security hardening
      run: |
          az logout
          az cache purge
          az account clear
      shell: bash
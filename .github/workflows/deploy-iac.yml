# This workflow will deploy all the Azure services, including ASA, KV & secrets, MYSQL (eventually with a Firewall rule to allow your workstation IP)
# eventually if DEPLOY_TO_VNET is set to true : also VNet, ASA deployed to VNet, private DNS-Zone, client VM deployed to the VNet

name: Deploy IaC with Azure Bicep

env:
  APP_NAME: petcliasa
  LOCATION: westeurope
  RG_KV: rg-iac-kv21 # RG where to deploy KV
  RG_APP: rg-iac-asa-petclinic-mic-srv # RG where to deploy the other Azure services: ASA, MySQL, etc.
  
  MYSQL_SERVER_NAME: petcliasa
  MYSQL_ADM_USR: mys_adm
  MYSQL_TIME_ZONE: Europe/Paris
  MYSQL_CHARACTER_SET: utf8
  MYSQL_PORT: 3306

  DEPLOY_TO_VNET: false

  KV_NAME: kv-petcliasa21 # The name of the KV, must be UNIQUE. A vault name must be between 3-24 alphanumeric characters
  SET_KV_ACCESS_POLICIES: false # let it to false

  GIT_CFG_URI: https://github.com/ezYakaEagle442/spring-petclinic-microservices-config

  # https://github.com/Azure/actions-workflow-samples/blob/master/assets/create-secrets-for-GitHub-workflows.md#consume-secrets-in-your-workflow
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-secrets

  # ==== Secrets ====

  # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
  # Never use structured data as a secret
  # Structured data can cause secret redaction within logs to fail, because redaction largely relies on finding an exact match for 
  # the specific secret value. For example, do not use a blob of JSON, XML, or YAML (or similar) to encapsulate a secret value, 
  # as this significantly reduces the probability the secrets will be properly redacted. Instead, create individual secrets for each sensitive value.

  MYSQL_ADM_PWD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

  SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT: ${{ secrets.SPRING_CLOUD_AZURE_KEY_VAULT_ENDPOINT }}
  SPRING_CLOUD_AZURE_TENANT_ID: ${{ secrets.SPRING_CLOUD_AZURE_TENANT_ID }}
  
  VM_ADMIN_USER_NAME: ${{ secrets.VM_ADMIN_USER_NAME }}
  VM_ADMIN_PASSWORD: ${{ secrets.VM_ADMIN_PASSWORD }}

  # https://learn.microsoft.com/en-us/azure/key-vault/secrets/secrets-best-practices#secrets-rotation
  # Because secrets are sensitive to leakage or exposure, it's important to rotate them often, at least every 60 days. 
  # Expiry date in seconds since 1970-01-01T00:00:00Z. Ex: 1672444800 ==> 31/12/2022'
  SECRET_EXPIRY_DATE: 1672444800

  credentials: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  # ==== Versions ====
  DEPLOYMENT_VERSION: 2.6.13
  AZ_CLI_VERSION: 2.42.0
  JAVA_VERSION: 11

on:
  workflow_dispatch:

jobs:
 
  call-pre-req-workflow:
    name: Trigger Pre-Req
    uses: ./.github/workflows/deploy-iac-pre-req.yml
    secrets: inherit

  create-apps:
    needs: call-pre-req-workflow
    runs-on: ubuntu-latest
            
    steps:
    - name: Login with GHA Runner SP
      uses: azure/login@v1.4.6 # fails https://github.com/marketplace/actions/azure-login
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # ${{ env.credentials }}

    - name: Checkout
      uses: actions/checkout@v3.1.0 # https://github.com/actions/checkout

    - name: Create Azure Spring Apps
      run: |

          # If you're deploying Azure Spring Apps Enterprise tier for the first time in the target subscription, 
          # use the following commands to register the provider and accept the legal terms and privacy statements for the Enterprise tier
          echo "see Azure Spring Apps Enterprise tier pre-req at https://learn.microsoft.com/en-us/azure/spring-apps/quickstart-deploy-infrastructure-vnet-bicep?tabs=azure-spring-apps-standard#prerequisites"
          
          # The client 'XXX' with object id 'XXX' does not have authorization to perform action 'Microsoft.SaaS/register/action' over scope '/subscriptions/***' or the scope is invalid
          # https://learn.microsoft.com/en-us/azure/azure-resource-manager/troubleshooting/error-register-resource-provider?tabs=azure-cli#cause
          
          echo "****************************************************************************************"
          echo "*                                                                                      *"
          echo "*                                                                                      *"
          echo "*The client 'XXX' with object id 'XXX' MUST have authorization to perform action       *"
          echo "'Microsoft.SaaS/register/action' whne running az term accept ...                       *"
          echo "*                                                                                      *"
          echo "****************************************************************************************"
          # az provider register --namespace Microsoft.SaaS
          # az term accept \
          #    --publisher vmware-inc \
          #    --product azure-spring-cloud-vmware-tanzu-2 \
          #    --plan tanzu-asc-ent-mtr

          az deployment group create --name asa-petclinic-apps -f iac/bicep/petclinic-apps.bicep -g ${{ env.RG_APP }} \
            -p appName=${{ env.APP_NAME }} \
            -p location=${{ env.LOCATION }} \
            -p kvName=${{ env.KV_NAME }} \
            -p kvRGName=${{ env.RG_KV }} \
            -p publicNetworkAccess=enabled \
            -p kvSkuName=standard \
            -p deployToVNet=${{ env.DEPLOY_TO_VNET }} \
            -p clientIPAddress="10.0.0.0" \
            -p startIpAddress="10.0.0.0" \
            -p endIpAddress="10.0.0.255" \
            -p mySQLServerName=${{ env.MYSQL_SERVER_NAME }} \
            -p mySQLadministratorLogin=${{ env.MYSQL_ADM_USR }} \
            -p gitConfigURI=${{ env.GIT_CFG_URI }}   
      shell: bash

    - name: Configure DB
      run: |
            az mysql flexible-server parameter set --name time_zone --value ${{ env.MYSQL_TIME_ZONE }} \
            -s ${{ env.MYSQL_SERVER_NAME }} -g ${{ env.RG_APP }}

            # https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-sets.html
            az mysql flexible-server parameter set --name character_set_server --value ${{ env.MYSQL_CHARACTER_SET }} \
            -g ${{ env.RG_APP }} -s ${{ env.MYSQL_SERVER_NAME }}

            LOCAL_IP=$(curl whatismyip.akamai.com)
            az mysql flexible-server firewall-rule create -g ${{ env.RG_APP }} -n ${{ env.MYSQL_SERVER_NAME }} --rule-name gha \
            --start-ip-address $LOCAL_IP --end-ip-address $LOCAL_IP

            # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md
            #sudo apt install mysql-client-core-8.0

            # https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-shell-connection-using-parameters.html
            #mysql -u ${{ env.MYSQL_ADM_USR }} --password=${{ env.MYSQL_ADM_PWD }} -h ${{ env.MYSQL_SERVER_NAME }}.mysql.database.azure.com -P ${{ env.MYSQL_PORT }}

            #\. spring-petclinic-vets-service/src/main/resources/db/mysql/schema.sql
            #\. spring-petclinic-vets-service/src/main/resources/db/mysql/data.sql

            #\. spring-petclinic-customers-service/src/main/resources/db/mysql/schema.sql
            #\. spring-petclinic-customers-service/src/main/resources/db/mysql/data.sql

            #\. spring-petclinic-visits-service/src/main/resources/db/mysql/schema.sql
            #\. spring-petclinic-visits-service/src/main/resources/db/mysql/data.sql

            #quit
            az mysql flexible-server firewall-rule delete -g ${{ env.RG_APP }} -n ${{ env.MYSQL_SERVER_NAME }} --rule-name gha
      shell: bash

    # security hardening for self-hosted agents: https://github.com/marketplace/actions/azure-login
    # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#hardening-for-self-hosted-runners
    # if the runner is self-hosted which is not github provided it is recommended to manually logout at the end of the workflow as shown below.
    - name: Azure Logout security hardening
      run: |
          az logout
          az cache purge
          az account clear
      shell: bash
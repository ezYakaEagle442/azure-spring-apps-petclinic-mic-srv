name: Deploy to Azure Spring Cloud with Key Vault
on: [push]

###################################################################################################################
#
# https://github.com/marketplace/actions/azure-spring-cloud
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-azure
#
###################################################################################################################

env:
  # AZURE_SUBSCRIPTION: # this is now a secret that you should have configured in your repo
  SPRING_CLOUD_SERVICE: asc-petcliasc # customize this
  KEYVAULT: kv-petcliasc424 # customize this
  # ==== APPS ====:
  API_GATEWAY: api-gateway
  ADMIN_SERVER: admin-server
  CUSTOMERS_SERVICE: customers-service
  VETS_SERVICE: vets-service
  VISITS_SERVICE: visits-service
  # ==== JARS ====:
  API_GATEWAY_JAR: spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-2.6.3.jar
  ADMIN_SERVER_JAR: spring-petclinic-admin-server/target/spring-petclinic-admin-server-2.6.3.jar
  CUSTOMERS_SERVICE_JAR: spring-petclinic-customers-service/target/spring-petclinic-customers-service-2.6.3.jar
  VETS_SERVICE_JAR: spring-petclinic-vets-service/target/spring-petclinic-vets-service-2.6.3.jar
  VISITS_SERVICE_JAR: spring-petclinic-visits-service/target/spring-petclinic-visits-service-2.6.3.jar
  # ==== Azure Spring Cloud Apps Deployment params ====:
  DEPLOYMENT_NAME: production
  DEPLOYMENT_RG: rg-iac-asc-petclinic-mic-srv
  DEPLOYMENT_VERSION: 2.6.3
  DEPLOYMENT_RUNTIME_VERSION: Java_11
  DEPLOYMENT_CPU: 500m
  DEPLOYMENT_MEMORY: 512Mi
  DEPLOYMENT_INSTANCE_COUNT: 3
  DEPLOYMENT_DISABLE_PROBE: false
  DEPLOYMENT_JVM_OPTIONS: -Xms512m -Xmx1024m -Dspring.profiles.active=mysql

  AZ_CLI_VERSION: 2.34.1

jobs:
  build:
    runs-on: ubuntu-latest
    # environment: production // https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    # https://github.com/marketplace/actions/azure-login
    steps:
    - name: Login with Key Vault SP
      uses: azure/login@v1 
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Get service SP from Key Vault
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.KEYVAULT }}
        secrets: "AZURE-CREDENTIALS-FOR-SPRING"
      id: keyvaultaction
    
    - name: Get MySQL Secrets from Key Vault
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.KEYVAULT }}
        secrets: "MYSQL-SERVER-FULL-NAME,MYSQL-DATABASE-NAME,MYSQL-SERVER-ADMIN-LOGIN-NAME,MYSQL-SERVER-ADMIN-PASSWORD"
      id: mysqlsecrets
      
    - name: Login with Service SP
      uses: azure/login@v1
      with:
        creds: ${{ steps.keyvaultaction.outputs.AZURE-CREDENTIALS-FOR-SPRING }}
        
    - name: Checkout your repo
      uses: actions/checkout@v2
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'microsoft'
        cache: maven

    - name: maven build, clean
      run: |
        mvn clean package -DskipTests -Denv=cloud

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps: 

    - name: Login with Key Vault SP
      uses: azure/login@v1 
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Get service SP from Key Vault
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.KEYVAULT }}
        secrets: "AZURE-CREDENTIALS-FOR-SPRING"
      id: keyvaultaction  
    
    - name: Login with Service SP
      uses: azure/login@v1
      with:
        creds: ${{ steps.keyvaultaction.outputs.AZURE-CREDENTIALS-FOR-SPRING }}

    # Unable to prompt for extension install confirmation as no tty available. 
    - name: Install Azure Spring Cloud CLI extention
      uses: azure/CLI@v1
      with:
        azcliversion:  ${{ env.AZ_CLI_VERSION }}
        inlineScript: |
          uname -a
          jq --version
          az provider register --namespace 'Microsoft.AppPlatform'
          az config set extension.use_dynamic_install=yes_without_prompt
          az extension add --name spring-cloud --yes 

    - name: Create Deployment for API_GATEWAY
      uses: azure/CLI@v1
      with:
        azcliversion:  ${{ env.AZ_CLI_VERSION }}
        inlineScript: |
          az spring-cloud app deployment create --name ${{ env.DEPLOYMENT_NAME }} --app  ${{ env.API_GATEWAY }} -s ${{ env.SPRING_CLOUD_SERVICE }} --artifact-path  ${{ github.workspace }}/${{ env.API_GATEWAY_JAR }} -g ${{ env.DEPLOYMENT_RG }} --version ${{ env.DEPLOYMENT_VERSION }} --runtime-version ${{ env.DEPLOYMENT_RUNTIME_VERSION }} --cpu ${{ env.DEPLOYMENT_CPU }} --memory ${{ env.DEPLOYMENT_MEMORY }} --instance-count ${{ env.DEPLOYMENT_INSTANCE_COUNT }} --disable-probe ${{ env.DEPLOYMENT_DISABLE_PROBE }}
   
    - name: Deploy api-gateway
      uses: Azure/spring-cloud-deploy@v1
      with:
        azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_CLOUD_SERVICE }}
        app-name: ${{ env.API_GATEWAY }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.API_GATEWAY_JAR }}
        jvm-options: ${{ env.DEPLOYMENT_JVM_OPTIONS }}
    
    - name: Create Deployment for ADMIN_SERVER
      uses: azure/CLI@v1
      with:
        azcliversion: ${{ env.AZ_CLI_VERSION }}
        inlineScript: |
          az spring-cloud app deployment create --name ${{ env.DEPLOYMENT_NAME }} --app  ${{ env.ADMIN_SERVER }} -s ${{ env.SPRING_CLOUD_SERVICE }} --artifact-path  ${{ github.workspace }}/${{ env.ADMIN_SERVER_JAR }} -g ${{ env.DEPLOYMENT_RG }} --version ${{ env.DEPLOYMENT_VERSION }} --runtime-version ${{ env.DEPLOYMENT_RUNTIME_VERSION }} --cpu ${{ env.DEPLOYMENT_CPU }} --memory ${{ env.DEPLOYMENT_MEMORY }} --instance-count ${{ env.DEPLOYMENT_INSTANCE_COUNT }} --disable-probe ${{ env.DEPLOYMENT_DISABLE_PROBE }}

    - name: Deploy admin-server
      uses:  Azure/spring-cloud-deploy@v1
      with:
        azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_CLOUD_SERVICE }}
        app-name: ${{ env.ADMIN_SERVER }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.ADMIN_SERVER_JAR }}
        jvm-options: ${{ env.DEPLOYMENT_JVM_OPTIONS }}    

    - name: Create Deployment for env.CUSTOMERS_SERVICE
      uses: azure/CLI@v1
      with:
        azcliversion: ${{ env.AZ_CLI_VERSION }}
        inlineScript: |
          az spring-cloud app deployment create --name ${{ env.DEPLOYMENT_NAME }} --app  ${{ env.CUSTOMERS_SERVICE }} -s ${{ env.SPRING_CLOUD_SERVICE }} --artifact-path  ${{ github.workspace }}/${{ env.CUSTOMERS_SERVICE_JAR }} -g ${{ env.DEPLOYMENT_RG }} --version ${{ env.DEPLOYMENT_VERSION }} --runtime-version ${{ env.DEPLOYMENT_RUNTIME_VERSION }} --cpu ${{ env.DEPLOYMENT_CPU }} --memory ${{ env.DEPLOYMENT_MEMORY }} --instance-count ${{ env.DEPLOYMENT_INSTANCE_COUNT }} --disable-probe ${{ env.DEPLOYMENT_DISABLE_PROBE }}

    - name: Deploy customers-service
      uses: Azure/spring-cloud-deploy@v1
      with:
        azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_CLOUD_SERVICE }}
        app-name: ${{ env.CUSTOMERS_SERVICE }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.CUSTOMERS_SERVICE_JAR }}
        jvm-options: ${{ env.DEPLOYMENT_JVM_OPTIONS }}
        # Environment variables to be entered using the syntax '-key value'. Values containing spaces should be enclosed in double quotes.
        environment-variables: "-MYSQL_SERVER_FULL_NAME ${{ steps.mysqlsecrets.outputs.MYSQL-SERVER-FULL-NAME }} \
        -MYSQL_DATABASE_NAME ${{ steps.mysqlsecrets.outputs.MYSQL-DATABASE-NAME }} \
        -MYSQL_SERVER_ADMIN_LOGIN_NAME ${{ steps.mysqlsecrets.outputs.MYSQL-SERVER-ADMIN-LOGIN-NAME }} \
        -MYSQL_SERVER_ADMIN_PASSWORD ${{ steps.mysqlsecrets.outputs.MYSQL-SERVER-ADMIN-PASSWORD }}"

    - name: Create Deployment for env.VETS_SERVICE
      uses: azure/CLI@v1
      with:
        azcliversion: ${{ env.AZ_CLI_VERSION }}
        inlineScript: |
          az spring-cloud app deployment create --name ${{ env.DEPLOYMENT_NAME }} --app  ${{ env.VETS_SERVICE }} -s ${{ env.SPRING_CLOUD_SERVICE }} --artifact-path ${{ github.workspace }}/${{ env.VETS_SERVICE_JAR }} -g ${{ env.DEPLOYMENT_RG }} --version ${{ env.DEPLOYMENT_VERSION }} --runtime-version ${{ env.DEPLOYMENT_RUNTIME_VERSION }} --cpu ${{ env.DEPLOYMENT_CPU }} --memory ${{ env.DEPLOYMENT_MEMORY }} --instance-count ${{ env.DEPLOYMENT_INSTANCE_COUNT }} --disable-probe ${{ env.DEPLOYMENT_DISABLE_PROBE }}

    - name: Deploy vets-service
      uses: Azure/spring-cloud-deploy@v1
      with:
        azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_CLOUD_SERVICE }}
        app-name: ${{ env.VETS_SERVICE }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.VETS_SERVICE_JAR }}
        jvm-options: ${{ env.DEPLOYMENT_JVM_OPTIONS }}
        # Environment variables to be entered using the syntax '-key value'. Values containing spaces should be enclosed in double quotes.
        environment-variables: "-MYSQL_SERVER_FULL_NAME ${{ steps.mysqlsecrets.outputs.MYSQL-SERVER-FULL-NAME }} \
        -MYSQL_DATABASE_NAME ${{ steps.mysqlsecrets.outputs.MYSQL-DATABASE-NAME }} \
        -MYSQL_SERVER_ADMIN_LOGIN_NAME ${{ steps.mysqlsecrets.outputs.MYSQL-SERVER-ADMIN-LOGIN-NAME }} \
        -MYSQL_SERVER_ADMIN_PASSWORD ${{ steps.mysqlsecrets.outputs.MYSQL-SERVER-ADMIN-PASSWORD }}"    

    - name: Create Deployment for env.VISITS_SERVICE
      uses: azure/CLI@v1
      with:
        azcliversion: ${{ env.AZ_CLI_VERSION }}
        inlineScript: |
          az spring-cloud app deployment create --name ${{ env.DEPLOYMENT_NAME }} --app  ${{ env.VISITS_SERVICE }} -s ${{ env.SPRING_CLOUD_SERVICE }} --artifact-path ${{ github.workspace }}/${{ env.VISITS_SERVICE_JAR }} -g ${{ env.DEPLOYMENT_RG }} --version ${{ env.DEPLOYMENT_VERSION }} --runtime-version ${{ env.DEPLOYMENT_RUNTIME_VERSION }} --cpu ${{ env.DEPLOYMENT_CPU }} --memory ${{ env.DEPLOYMENT_MEMORY }} --instance-count ${{ env.DEPLOYMENT_INSTANCE_COUNT }} --disable-probe ${{ env.DEPLOYMENT_DISABLE_PROBE }}

    - name: Deploy visits-service
      uses: Azure/spring-cloud-deploy@v1
      with:
        azure-subscription: ${{ secrets.AZURE_SUBSCRIPTION }}
        action: deploy
        service-name: ${{ env.SPRING_CLOUD_SERVICE }}
        app-name: ${{ env.VISITS_SERVICE }}
        use-staging-deployment: false
        package: ${{ github.workspace }}/${{ env.VISITS_SERVICE_JAR }}
        jvm-options: ${{ env.DEPLOYMENT_JVM_OPTIONS }}
        # Environment variables to be entered using the syntax '-key value'. Values containing spaces should be enclosed in double quotes.
        environment-variables: "-MYSQL_SERVER_FULL_NAME ${{ steps.mysqlsecrets.outputs.MYSQL-SERVER-FULL-NAME }} \
        -MYSQL_DATABASE_NAME ${{ steps.mysqlsecrets.outputs.MYSQL-DATABASE-NAME }} \
        -MYSQL_SERVER_ADMIN_LOGIN_NAME ${{ steps.mysqlsecrets.outputs.MYSQL-SERVER-ADMIN-LOGIN-NAME }} \
        -MYSQL_SERVER_ADMIN_PASSWORD ${{ steps.mysqlsecrets.outputs.MYSQL-SERVER-ADMIN-PASSWORD }}"

    # security hardening for self-hosted agents: https://github.com/marketplace/actions/azure-login
    # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#hardening-for-self-hosted-runners
    # if the runner is self-hosted which is not github provided it is recommended to manually logout at the end of the workflow as shown below.
    - name: Azure Logout security hardening
      uses: azure/CLI@v1
      with:
        azcliversion: ${{ env.AZ_CLI_VERSION }}
        inlineScript: |
          az logout
          az cache purge
          az account clear
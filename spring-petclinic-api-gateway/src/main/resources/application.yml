spring:
  cloud:
    gateway:
      discovery:
        # make sure a DiscoveryClient implementation (such as Netflix Eureka) is on the classpath and enabled
        locator: # https://cloud.spring.io/spring-cloud-gateway/reference/html/#the-discoveryclient-route-definition-locator
          enabled: true #  to configure Spring Cloud Gateway to use the Spring Cloud Service Registry to discover the available microservices.    
      routes:
        - id: vets-service
          uri: http://vets-service
          predicates:
            - Path=/api/vet/**
          filters:
            - StripPrefix=2
        - id: visits-service
          uri: http://visits-service
          predicates:
            - Path=/api/visit/**
          filters:
            - StripPrefix=2
        - id: customers-service
          uri: http://customers-service
          predicates:
            - Path=/api/customer/**
          filters:
            - StripPrefix=2
      globalcors: # o allow CORS requests to our gateway. This can be helpful when you add a front-end that is not hosted on Azure Spring Apps.
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET            
---            
management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  endpoints:
    enabled-by-default: false
    web:
      base-path: "/manage"
      exposure: # https://docs.spring.io/spring-boot/docs/2.6.3/reference/html/actuator.html#actuator.endpoints.exposing
        include: "health,info,env,mappings" # "*"
        exclude: "beans"    
  endpoint:
    health:
      enabled: true
      status:
        http-mapping:
          down: 503
          fatal: 503
          out-of-service: 503
      group:
        readiness:
          include: "readinessState"
        liveness:
          include: "livenessState"                      
      probes:
        enabled: true      
    info:
      enabled: true
    env:
      enabled: true
    mappings:
      enabled: true            
  server:
    port: 8081